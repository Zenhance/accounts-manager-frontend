{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\3-2\\\\SWE 4637 (Web and Mobile Dev)\\\\RN Project\\\\accounts-manager-frontend\\\\src\\\\providers\\\\AuthProvider.js\";\n\nimport React, { useState } from \"react\";\nvar AuthContext = React.createContext();\n\nvar AuthProvider = function AuthProvider(props) {\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentAdmin = _useState2[0],\n      setCurrentAdmin = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoggedIn = _useState4[0],\n      setIsLoggedIn = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      token = _useState6[0],\n      setToken = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      tokenType = _useState8[0],\n      setTokenType = _useState8[1];\n\n  return React.createElement(AuthContext.Provider, {\n    value: {\n      currentAdmin: currentAdmin,\n      setCurrentAdmin: setCurrentAdmin,\n      isLoggedIn: isLoggedIn,\n      setIsLoggedIn: setIsLoggedIn,\n      token: token,\n      setToken: setToken\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport { AuthContext, AuthProvider };","map":{"version":3,"sources":["D:/3-2/SWE 4637 (Web and Mobile Dev)/RN Project/accounts-manager-frontend/src/providers/AuthProvider.js"],"names":["React","useState","AuthContext","createContext","AuthProvider","props","currentAdmin","setCurrentAdmin","isLoggedIn","setIsLoggedIn","token","setToken","tokenType","setTokenType","children"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AAEA,IAAMC,WAAW,GAAGF,KAAK,CAACG,aAAN,EAApB;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAAA,kBACWJ,QAAQ,CAAC,EAAD,CADnB;AAAA;AAAA,MACrBK,YADqB;AAAA,MACRC,eADQ;;AAAA,mBAEON,QAAQ,CAAC,KAAD,CAFf;AAAA;AAAA,MAErBO,UAFqB;AAAA,MAEVC,aAFU;;AAAA,mBAGHR,QAAQ,CAAC,IAAD,CAHL;AAAA;AAAA,MAGrBS,KAHqB;AAAA,MAGfC,QAHe;;AAAA,mBAIKV,QAAQ,CAAC,IAAD,CAJb;AAAA;AAAA,MAIrBW,SAJqB;AAAA,MAIXC,YAJW;;AAM5B,SACI,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AACzBP,MAAAA,YAAY,EAACA,YADY;AAEzBC,MAAAA,eAAe,EAACA,eAFS;AAGzBC,MAAAA,UAAU,EAAEA,UAHa;AAIzBC,MAAAA,aAAa,EAACA,aAJW;AAKzBC,MAAAA,KAAK,EAACA,KALmB;AAMzBC,MAAAA,QAAQ,EAACA;AANgB,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQKN,KAAK,CAACS,QARX,CADJ;AAYH,CAlBD;;AAoBA,SAAQZ,WAAR,EAAoBE,YAApB","sourcesContent":["import React,{useState} from \"react\";\r\n\r\nconst AuthContext = React.createContext();\r\n\r\nconst AuthProvider = (props) => {\r\n    const [currentAdmin,setCurrentAdmin] = useState({});\r\n    const [isLoggedIn,setIsLoggedIn] = useState(false);\r\n    const [token,setToken] = useState(null);\r\n    const [tokenType,setTokenType] = useState(null);\r\n\r\n    return(\r\n        <AuthContext.Provider value={{\r\n            currentAdmin:currentAdmin,\r\n            setCurrentAdmin:setCurrentAdmin,\r\n            isLoggedIn: isLoggedIn,\r\n            setIsLoggedIn:setIsLoggedIn,\r\n            token:token,\r\n            setToken:setToken\r\n        }}>\r\n            {props.children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport {AuthContext,AuthProvider};\r\n"]},"metadata":{},"sourceType":"module"}